{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","id","Table","table","CoinList","coinData","map","key","Section","section","Th","th","AccountBalance","buttonText","amountText","amount","handleBalanceVisibilityChange","Number","global","market_cap_usd","volume_24h_usd","bitcoin_dominance_percentage","cryptocurrencies_number","handleRefresh2","Container","div","Logo","img","ExchangeHeader","src","logo","alt","type","value","text","onChange","handleChange","formatPrice","parseFloat","toFixed","ContainerAll","App","useState","setBalance","setShowtbalance","setCoindata","setGlobal","setText","valueChangeId","a","tickerUrl","axios","get","response","newPrice","data","quotes","USD","newCoinData","values","newValues","componentDidMount","coinIds","slice","coin","promises","Promise","all","coinPriceData","symbol","componentDidMount2","promise","generalData","useEffect","length","e","sha256","target","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7936dba.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';  \r\n\r\nimport styled from 'styled-components'\r\nconst Td = styled.td` \r\n    border: 1px solid black;\r\n    width: 60vh;\r\n`\r\n\r\n\r\nexport default function Coin(props)  {\r\n    const handleClick = (event) => {  \r\n        event.preventDefault(); \r\n        props.handleRefresh(props.id); // pass the id \r\n    }\r\n        \r\n        return ( \r\n            <tr>\r\n                <Td>{props.name}</Td>\r\n                <Td>{props.ticker}</Td>\r\n                <Td>${props.price}</Td>\r\n                {props.showBalance ? <Td>${props.balance}</Td> : null }\r\n                \r\n                <Td>\r\n                    <form action = \"#\" method = \"POST\"/>  \r\n                        <button onClick={handleClick }>Refresh</button>\r\n                </Td>\r\n            </tr>    \r\n        );\r\n    \r\n}\r\n\r\nCoin.propTypes = {\r\n    name: PropTypes.string,\r\n    ticker: PropTypes.string,\r\n    price: PropTypes.number,\r\n    balance: PropTypes.number,  \r\n    id: PropTypes.string, \r\n};\r\n\r\n  ","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table` \r\n    margin: 50px auto 50px auto;\r\n    display: inline-block;\r\n    font-size: 1.4rem;\r\n    text-align: center;\r\n    background-color: #000080;\r\n    -webkit-box-shadow: 16px 17px 77px 75px rgba(0,0,0,0.8); \r\n    box-shadow: 16px 17px 77px 75px rgba(0,0,0,0.8)\r\n`\r\n\r\nexport default function CoinList(props) {\r\n      return (\r\n        <div>\r\n          <Table>\r\n              <thead> \r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Ticker</th>\r\n                  <th>Price</th>\r\n                  {props.showBalance ? <th>Balance</th> : null}\r\n                  <th>Update</th>\r\n                </tr>\r\n              </thead>\r\n            <tbody >\r\n                { \r\n                props.coinData.map(({key,id, name, ticker, price, balance}) => <Coin key = {key} // changed to key= {key} \r\n                id = {id} // New i cannot use key \r\n                handleRefresh = {props.handleRefresh}\r\n                name = {name} \r\n                ticker = {ticker} \r\n                price = {price} \r\n                balance = {balance}\r\n                showBalance = {props.showBalance}/>) \r\n                }\r\n            </tbody>  \r\n          </Table> \r\n        </div>\r\n        )\r\n}\r\n\r\n\r\n\r\n","import React  from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'; \r\n\r\n\r\nconst Section = styled.section `\r\ntext-align: center;\r\nbackground: transparent;\r\nborder-radius: 50px;\r\nborder: 2px solid palevioletred;\r\ncolor: white;\r\nmargin: 2 1em;\r\npadding: 0.10em 3em;\r\n`\r\nconst Table = styled.table `\r\nborder: 1px solid black;\r\nwidth: 100%;\r\ntext-align: center;\r\nfont-size: 1.4rem;\r\n`\r\nconst Th = styled.th `\r\nborder: 1px solid black;\r\n`\r\nconst Td = styled.td `\r\nborder: 1px solid black;\r\n`\r\n\r\n\r\nexport default function AccountBalance(props)  {\r\n   const handleClick2 = (event) => {  \r\n      event.preventDefault(); \r\n      props.handleRefresh2(); \r\n  }\r\n        const buttonText = props.showBalance ?  'HideBalance' : 'ShowBalance'; \r\n        const amountText = props.showBalance ? `Amount = $${props.amount}` : ' '; \r\n        return (\r\n            <Section>   \r\n                <p>{amountText}</p> \r\n                <button onClick = {props.handleBalanceVisibilityChange} >{buttonText}</button> \r\n                <Table>\r\n                  <thead>\r\n                     <tr>\r\n                        <Th>Market cap in USD</Th>\r\n                        <Th>Volume 24h USD</Th>\r\n                        <Th>Bitcoin Dominance</Th>\r\n                        <Th>Cryptocurrencies Number</Th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                     <tr>\r\n                        <Td>${Number(props.global.market_cap_usd)}</Td>\r\n                        <Td>${Number(props.global.volume_24h_usd)}</Td>\r\n                        <Td>{props.global.bitcoin_dominance_percentage}%</Td>\r\n                        <Td>{props.global.cryptocurrencies_number}</Td>\r\n                     </tr>    \r\n                  </tbody>\r\n               </Table>\r\n               <button onClick = {handleClick2}> Refresh Statistics</button>\r\n           </Section>\r\n        )\r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n   amount: PropTypes.number,\r\n   showBalance: PropTypes.bool,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg'; \r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    color: white;\r\n    height: 10;\r\n`\r\n\r\nconst Logo = styled.img`\r\n    height: 20vmin;\r\n    pointer-events: none;\r\n`\r\n\r\nexport default function ExchangeHeader (props) {\r\n        return (\r\n            <Container>\r\n                <Logo src={logo} alt=\"logo\"/> COIN EXCHANGE   \r\n                <form>\r\n                    <label>\r\n                    Helicopter password: <input type= \"text\" value={props.text}  onChange={props.handleChange} />\r\n                    </label>\r\n                    Text: {props.text}\r\n                </form>\r\n            </Container>\r\n        )\r\n    }\r\n","import CoinList from './components/CoinList/CoinList';\r\nimport AccountBalance from './components/AccountBalance/AccountBalance';\r\nimport React,  {useState, useEffect} from 'react';\r\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'; \r\nimport { sha256 } from 'js-sha256';\r\n\r\n\r\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\r\nconst COINCOUNT = 10; \r\nconst hashPassword  = \"4525788bce6d3098bdf6746f7de36cbdbd155eb991f4cd789a384376d3a83ba9\";\r\nconst ContainerAll = styled.div`\r\n    background-color: #282c34;\r\n    height: 10;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: calc(20px + 2vmin);\r\n    color: white;\r\n    `\r\n\r\nfunction App(props) { // new for hooks and function components\r\n    const [balance, setBalance] = useState(10000);\r\n    const [showBalance, setShowtbalance] = useState(true);\r\n    const [coinData, setCoindata] = useState([]);\r\n    const [global, setGlobal] = useState([]);\r\n    const [text, setText] = useState(\"\"); \r\n    \r\n\r\n    const handleChange = e => {\r\n      if(sha256(e.target.value)=== hashPassword) {\r\n        const bailoud = balance + 10000;\r\n        setBalance(bailoud);\r\n      }\r\n      setText(e.target.value)\r\n    }\r\n\r\n  const handleRefresh = async (valueChangeId) => {  // receive the id with valueChangeId changed\r\n    const tickerUrl =  `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`\r\n    const response = await axios.get(tickerUrl);\r\n    const newPrice = formatPrice(response.data.quotes.USD.price);\r\n    const newCoinData = coinData.map((values) => { \r\n    let newValues = {...values}; \r\n      if (valueChangeId=== values.key) {\r\n        newValues.price =  newPrice;  \r\n      }\r\n      return newValues;\r\n    }); \r\n      setCoindata(newCoinData); // new for hooks \r\n  }\r\n      \r\n\r\n  const handleBalanceVisibilityChange = () =>{ \r\n    setShowtbalance(oldValue => !oldValue); // new for hooks \r\n  }\r\n\r\n  const componentDidMount = async () => { \r\n      const response = await axios.get('https://api.coinpaprika.com/v1/coins'); \r\n      const coinIds = response.data.slice(0, COINCOUNT).map(coin=> coin.id);\r\n      const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\r\n      const promises = coinIds.map(id =>axios.get(tickerUrl + id)); \r\n      const coinData =  await Promise.all(promises);\r\n      const coinPriceData = coinData.map((response) =>{\r\n          const coin = response.data; \r\n          return {\r\n           key: coin.id, \r\n           id: coin.id,\r\n           name: coin.name,\r\n           ticker:coin.symbol,\r\n           balance: 0, \r\n           price: formatPrice(coin.quotes.USD.price), \r\n          }\r\n      }); \r\n      setCoindata(coinPriceData); // new for hooks, component did mount \r\n  } \r\n    \r\n  const componentDidMount2 = async () => { \r\n    const urlGeneral = `https://api.coinpaprika.com/v1/global`\r\n    const promise = await axios.get(urlGeneral);\r\n    const generalData = promise.data;     \r\n    setGlobal (generalData);\r\n  }\r\n\r\n  const handleRefresh2 = async () => { \r\n    const promise = await axios.get(`https://api.coinpaprika.com/v1/global`);\r\n    setGlobal (promise.data);\r\n  }\r\n\r\n \r\n  useEffect( () => { \r\n    if(coinData.length === 0) {\r\n      componentDidMount(); \r\n      componentDidMount2(); \r\n    }\r\n  });\r\n  \r\n  \r\n    return ( \r\n    <ContainerAll>\r\n      <ExchangeHeader handleChange = {handleChange}/>\r\n      <AccountBalance amount = {balance} showBalance  = {showBalance}\r\n      handleBalanceVisibilityChange = {handleBalanceVisibilityChange}\r\n      handleRefresh2 = {handleRefresh2}  global = {global}/> \r\n      <CoinList coinData ={coinData} handleRefresh = {handleRefresh}\r\n      showBalance = {showBalance}/> \r\n    </ContainerAll>\r\n    )\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}